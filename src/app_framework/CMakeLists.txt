CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

AUX_SOURCE_DIRECTORY(./ APP_FW_SRC)

IF(UNIX)
AUX_SOURCE_DIRECTORY(./Linux PLATFORM_APP_FW_SRC)
ELSEIF(WIN32)
AUX_SOURCE_DIRECTORY(./Windows PLATFORM_APP_FW_SRC)
ENDIF(UNIX)

SET(APP_FW_SRC ${APP_FW_SRC} ${PLATFORM_APP_FW_SRC})

SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/Common/include)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/OpenGL/core)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/app_framework)

ADD_LIBRARY(app_framework STATIC ${APP_FW_SRC})

IF(UNIX)

# Workaround for glfw3 install path issue
LIST(APPEND CMAKE_PREFIX_PATH /usr/lib64/cmake/glfw)
FIND_PACKAGE(glfw3 3.1.1 REQUIRED)
IF(glfw3_FOUND)
	MESSAGE(STATUS      "Looking for glfw3 - found")
ELSE(glfw3_FOUND)
	MESSAGE(FATAL_ERROR "Looking for glfw3 - not found")
ENDIF(glfw3_FOUND)
INCLUDE_DIRECTORIES(${GLFW3_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(app_framework glsp_ogl glfw GLEW GL)

ELSEIF(WIN32)
TARGET_LINK_LIBRARIES(app_framework glsp_ogl d3d11 D3DCompiler)
ENDIF(UNIX)
