CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

AUX_SOURCE_DIRECTORY(./main EGLMAIN_SRC)
AUX_SOURCE_DIRECTORY(./ws/X11 EGLX11_SRC)

SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)

ADD_LIBRARY(glsp_egl SHARED ${EGLMAIN_SRC} ${EGLX11_SRC})
ADD_DEPENDENCIES(glsp_egl glsp_ogl)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/egl/main)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/egl/ws/x11)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/include)

# drm
FIND_PACKAGE(DRM)
IF(DRM_FOUND)
	MESSAGE(STATUS      "Looking for drm - found")
ELSE(DRM_FOUND)
	MESSAGE(FETAL_ERROR "Looking for drm - not found")
ENDIF(DRM_FOUND)

# drm intel
FIND_PACKAGE(DRMIntel)
IF(DRM_INTEL_FOUND)
	MESSAGE(STATUS      "Looking for drm_intel - found")
ELSE(DRM_INTEL_FOUND)
	MESSAGE(FETAL_ERROR "Looking for drm_intel - not found")
ENDIF(DRM_INTEL_FOUND)

# XCB
FIND_PACKAGE(XCB)
IF(XCB_FOUND)
	MESSAGE(STATUS "Looking for XCB - found")
ELSE(XCB_FOUND)
	MESSAGE(STATUS "Looking for XCB - not found")
ENDIF(XCB_FOUND)

INCLUDE_DIRECTORIES(${DRM_INCLUDE_PATH}
					${DRM_INTEL_INCLUDE_PATH}
					${XCB_INCLUDE_PATH}
					${XLIB_XCB_INCLUDE_PATH})

TARGET_LINK_LIBRARIES(glsp_egl
					  ${DRM_LIBRARY}
					  ${DRM_INTEL_LIBRARY}
					  ${XCB_LIBRARY}
					  ${XLIB_XCB_LIBRARY}
					  ${XCB_DRI2_LIBRARY})
